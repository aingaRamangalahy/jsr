services:
  frontend:
    build: 
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "3001:80"
    restart: always
    depends_on:
      - backend
    environment:
      - VITE_API_URL=${VITE_API_URL}
    networks:
      - jsr-network

  backend:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "3000:3000"
    restart: always
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - MONGODB_URI=${MONGODB_URI}
      - CORS_ORIGIN=${CORS_ORIGIN}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX=${RATE_LIMIT_MAX}
    volumes:
      - backend_logs:/app/logs
    networks:
      - jsr-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  mongodb:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - jsr-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=jsresources
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

networks:
  jsr-network:
    driver: bridge

volumes:
  backend_logs:
  mongodb_data:
